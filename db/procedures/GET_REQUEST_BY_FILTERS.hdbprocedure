PROCEDURE "MKTG_CART_REQUEST_TOOL"."mktgcartrequesttool.db.procedures::GET_REQUEST_BY_FILTERS" (
	 IN in_goods_recipient nvarchar (127),
	 IN in_budget_year_id bigint,
	 IN in_team_id bigint,
	 IN in_request_date_from timestamp,
	 IN in_request_date_to timestamp,
	 IN in_requester_user_id bigint,
	 IN in_user_id bigint,
	 IN in_vendor_additional_information_id bigint,
	 IN in_status_id bigint,
	 IN in_permission_id bigint,
	 IN in_resource_id bigint, 
	 OUT out_result TABLE(REQUEST_ID integer, 
	 					  ISO nvarchar(2),
	 					  STATUS_ID integer,
						  STATUS_NAME nvarchar(255), 
						  VENDOR_NAME nvarchar(255),
						  VENDOR_ADDITIONAL_INFORMATION_ID bigint,
						  CURRENCY_ABBREVIATION nvarchar(255), 
						  REQUEST_SERVICE_CART_AMOUNT DECIMAL,
						  TEAM_NAME nvarchar(255),
						  GOODS_RECIPIENT_USERNAME nvarchar(255),
						  USER_NAME nvarchar(255),
						  LAST_NAME nvarchar(255),
						  FIRST_NAME nvarchar(255),
						  REQUEST_CREATED_DATE timestamp,
						  COST_VALUE nvarchar(255),
  						  message_read integer,
  						  EDITABLE boolean
						 ),
	 OUT out_service_table TABLE(
	 					REQUEST_ID integer,
	 					service_id bigint,
                      	start_date nvarchar(32),
                      	end_date nvarchar(32),
                      	description nvarchar (255),
                      	amount decimal (19,2),
                      	currency_id bigint,
                      	currency_abbreviation nvarchar (255),
                      	budget decimal (19,2),
                      	item integer,
                     	line_number nvarchar(255),
  						shopping_cart nvarchar (255), 
  						cart_date timestamp, 
  						purchase_order_number nvarchar (127),
  						approval_date timestamp, 
  						user_id bigint ),
  						
  	 OUT out_special_request_table TABLE(
	 					REQUEST_ID integer,
	 					special_request_id bigint,
                      	start_date nvarchar(32),
                      	end_date nvarchar(32),
                      	material_description nvarchar (255),
                      	material_code nvarchar(255),
                      	amount decimal (19,2),
                      	currency_id bigint,
                      	currency_abbreviation nvarchar (255),
                      	budget decimal (19,2),
                      	item integer,
                      	unit nvarchar(255),
                      	unit_price decimal (19,2),
                      	quantity decimal(19,3),
                      	vendor_text nvarchar(1000),
  						created_user_id bigint ),
  						
  	OUT out_attachment_table TABLE(	request_id bigint,
  									attachment_id bigint, 
									user_id bigint, 
									original_name nvarchar(255), 
									saved_name nvarchar(255), 
									attachment_size integer,
									CREATED_DATE timestamp
									)
	 )
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "MKTG_CART_REQUEST_TOOL"
	READS SQL DATA AS
BEGIN
	va_purchase_order = SELECT 	VPO.request_id, 
								VPO.shopping_cart, 
								VPO.cart_date,
								VPO.purchase_order_number,
								VPO.approval_date,
								VPO.user_id
							FROM
								(SELECT POS.request_id, 
  										POS.shopping_cart,
  										POS.cart_date,
  										POS.purchase_order_number,
  										POS.approval_date,
  										POS.user_id
                    	FROM "PURCHASE_ORDER_SERVICE" POS
                      		WHERE POS.ENABLED = 1 
                           		AND POS.DELETED = 0) VPO;
                           		
	va_message = SELECT RM.REQUEST_ID, sum(case when RM.MESSAGE_READ = 0 then 1 else 0 end) AS MESSAGE_READ
				 	FROM "REQUEST_MESSAGE" RM
				 		WHERE RM.CREATED_USER_ID != in_user_id AND RM.DELETED = 0 AND RM.ENABLED = 1
				 		GROUP BY RM.REQUEST_ID;
				 		
	va_user_role = SELECT USR.ROLE_ID, USR.USER_ID, HL3.HL3_ID, USR.ENABLED, USR.DELETED, RP.PERMISSION_LEVEL
						FROM "USER_ROLE" USR
							LEFT JOIN "HL3_USER" HL3 ON HL3.USER_ID = USR.USER_ID AND HL3.ENABLED = 1 AND HL3.DELETED = 0
							INNER JOIN "ROLE_PERMISSION" RP 
								ON RP.ROLE_ID = USR.ROLE_ID
								AND RP.PERMISSION_ID = in_permission_id
								AND RP.RESOURCE_ID = in_resource_id
						WHERE USR.USER_ID = in_user_id;
				 		
	out_result = SELECT DISTINCT RQ.REQUEST_ID,
						 CTY.ISO AS iso, 
						 ST.STATUS_ID AS STATUS_ID, 
						 ST.NAME AS STATUS_NAME, 
						 VAI.VENDOR_NAME AS VENDOR_NAME,
						 VAI.VENDOR_ADDITIONAL_INFORMATION_ID,
						 CUR.ABBREVIATION AS CURRENCY_ABBREVIATION,
						 RS.CART_AMOUNT AS REQUEST_SERVICE_CART_AMOUNT,
						 HL3.HL3_DESCRIPTION AS TEAM_NAME,
						 RQ.GOODS_RECIPIENT_USERNAME,
						 US.USER_NAME AS USER_NAME,
						 US.LAST_NAME AS LAST_NAME,
						 US.FIRST_NAME AS FIRST_NAME,
						 RQ.CREATED_DATE_TZ AS REQUEST_CREATED_DATE,
						 RCO.COST_VALUE,
               			 VAM.MESSAGE_READ,
               			 (CASE WHEN (ST.STATUS_ID = 5 OR ST.STATUS_ID = 6) AND USR.PERMISSION_LEVEL != 2 THEN FALSE ELSE TRUE END) AS EDITABLE
				  FROM "REQUEST" RQ
						  INNER JOIN "REQUEST_STATUS" ST ON RQ.STATUS_ID = ST.STATUS_ID
						  LEFT JOIN "VENDOR_ADDITIONAL_INFORMATION" VAI ON VAI.VENDOR_ADDITIONAL_INFORMATION_ID = RQ.VENDOR_ADDITIONAL_INFORMATION_ID
						  INNER JOIN "REQUEST_SERVICE" RS ON RQ.REQUEST_ID = RS.REQUEST_ID
						  INNER JOIN "CURRENCY" CUR ON RS.CURRENCY_ID = CUR.CURRENCY_ID
						  INNER JOIN "CRT_TYPE" CTY ON RQ.CRT_TYPE_ID = CTY.CRT_TYPE_ID AND CTY.ENABLED = 1 AND CTY.DELETED = 0
						  INNER JOIN "REQUEST_COST_OBJECT" RCO ON RCO.REQUEST_ID = RQ.REQUEST_ID
						  LEFT JOIN "HL3" HL3 ON RQ.HL3_ID = HL3.HL3_ID
						  LEFT JOIN "BUDGET_YEAR" BYEAR ON RQ.BUDGET_YEAR_ID = BYEAR.BUDGET_YEAR_ID
						  LEFT JOIN "USER" US ON RQ.CREATED_USER_ID = US.USER_ID
						  LEFT JOIN :va_message VAM ON RQ.REQUEST_ID = VAM.REQUEST_ID
						  INNER JOIN :va_user_role USR ON USR.ENABLED = 1 
				--Current roles: 1. SuperAdmin, 2. Requester, 3. Business Mgt, 4. Budget Owner/Mgr
			  	  WHERE (
			  	  		 (USR.ROLE_ID = 1 OR USR.ROLE_ID = 3)
		              		OR (USR.ROLE_ID = 2 AND RQ.CREATED_USER_ID = in_user_id AND USR.HL3_ID = RQ.HL3_ID)
		              		OR (USR.ROLE_ID = 4 AND USR.HL3_ID = RQ.HL3_ID)
		              	)
				  	  AND (in_goods_recipient IS NULL OR in_goods_recipient = '' OR RQ.GOODS_RECIPIENT_USERNAME like '%' || in_goods_recipient || '%')
   					  AND (RQ.HL3_ID = in_team_id OR in_team_id IS NULL)
   					  AND (RQ.BUDGET_YEAR_ID = in_budget_year_id OR in_budget_year_id IS NULL)
					  AND (To_Char(RQ.CREATED_DATE_TZ,'YYYY-MM-DD') >= in_request_date_from OR in_request_date_from IS NULL)
					  AND (To_Char(RQ.CREATED_DATE_TZ,'YYYY-MM-DD') <= in_request_date_to OR in_request_date_to IS NULL)
					  AND (RQ.CREATED_USER_ID = in_requester_user_id OR in_requester_user_id IS NULL)
					  AND (RQ.vendor_additional_information_id = in_vendor_additional_information_id OR in_vendor_additional_information_id IS NULL)
					  AND (RQ.STATUS_ID = in_status_id OR in_status_id IS NULL)
					  AND (RQ.ENABLED = 1)
					  AND (RQ.DELETED = 0)
					ORDER BY RQ.REQUEST_ID DESC;
	
	out_service_table = SELECT 
  				SER.request_id,
  				SER.service_id, 
  				TO_NVARCHAR(SER.start_date, 'MM-DD-YYYY') as start_date,
                TO_NVARCHAR(SER.end_date, 'MM-DD-YYYY') as end_date,
  				SER.description, 
  				SER.amount, 
  				SER.currency_id, 
  				CU.ABBREVIATION AS currency_abbreviation,
  				SER.budget, 
  				SER.item,
  				SER.line_number,
  				POS.shopping_cart, 
  				POS.cart_date, 
  				POS.purchase_order_number,
  				POS.approval_date,
  				POS.user_id
            FROM "SERVICE" SER
            INNER JOIN "CURRENCY" CU ON SER.CURRENCY_ID = CU.CURRENCY_ID
            LEFT JOIN :va_purchase_order POS ON SER.REQUEST_ID = POS.REQUEST_ID
            WHERE SER.ENABLED = 1 AND SER.DELETED = 0
            ORDER BY SER.ITEM;
            
	 out_special_request_table = SELECT 
  				SRQ.request_id,
  				SRQ.special_request_id,
  				TO_NVARCHAR(SRQ.start_date, 'MM-DD-YYYY') as start_date,
                TO_NVARCHAR(SRQ.end_date, 'MM-DD-YYYY') as end_date,
  				SRQ.material_description, 
  				SRQ.material_code,
  				SRQ.amount, 
  				SRQ.currency_id, 
  				CU.ABBREVIATION AS currency_abbreviation,
  				SRQ.budget, 
  				SRQ.item,
  				SRQ.unit,
                SRQ.unit_price,
                SRQ.quantity,
                SRQ.vendor_text,
  				SRQ.created_user_id
            FROM "SPECIAL_REQUEST" SRQ
            LEFT JOIN "CURRENCY" CU ON SRQ.CURRENCY_ID = CU.CURRENCY_ID
            WHERE SRQ.ENABLED = 1 AND SRQ.DELETED = 0
            ORDER BY SRQ.ITEM;
            
     out_attachment_table = SELECT
     							"ATTACHMENT_REQUEST".REQUEST_ID,
								"ATTACHMENT".ATTACHMENT_ID, 
								"ATTACHMENT".USER_ID, 
								"ATTACHMENT".ORIGINAL_NAME, 
								"ATTACHMENT".SAVED_NAME, 
								"ATTACHMENT".ATTACHMENT_SIZE,
								"ATTACHMENT".CREATED_DATE_TZ AS CREATED_DATE
							FROM "ATTACHMENT_REQUEST"
								INNER JOIN "ATTACHMENT" AS ATTACHMENT ON "ATTACHMENT_REQUEST".attachment_id = ATTACHMENT.attachment_id
								WHERE "ATTACHMENT".deleted = 0
								AND "ATTACHMENT".enabled = 1;
END;