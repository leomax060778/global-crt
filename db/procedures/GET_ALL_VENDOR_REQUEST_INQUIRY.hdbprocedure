PROCEDURE "MKTG_CART_REQUEST_TOOL"."mktgcartrequesttool.db.procedures::GET_ALL_VENDOR_REQUEST_INQUIRY" (
	IN in_user_id bigint,
	IN in_permission_id bigint,
	IN in_resource_id bigint,
	OUT out_result TABLE (VENDOR_REQUEST_INQUIRY_ID NVARCHAR(255),
							V_ID INTEGER,
							VENDOR_ID BIGINT,
  							message_read INTEGER,
							CREATED_DATE_TZ timestamp,
							VENDOR_NAME NVARCHAR(255),
							RECEIVER_DATE_SUBMITTED_TZ timestamp,
							RECEIVER_YVC_REQUEST NVARCHAR(255),
							RECEIVER_DATE_COMPLETED_TZ timestamp,
							RECEIVER_VENDOR_ACCOUNT NVARCHAR(255),
							STATUS_NAME NVARCHAR(255),
							STATUS_ID BIGINT,
							ADMINISTRABLE TINYINT,
							EDITABLE BOOLEAN,
							VENDOR_TYPE_ID BIGINT,
							order_date TIMESTAMP,
							CREATED_USER_ID BIGINT
						 )
 ) 
	LANGUAGE SQLSCRIPT
	SQL SECURITY INVOKER 
	DEFAULT SCHEMA "MKTG_CART_REQUEST_TOOL"
	READS SQL DATA AS
BEGIN
	va_vendor_inquiry_message = SELECT VIM.VENDOR_INQUIRY_ID, sum(case when VIM.MESSAGE_READ = 0 then 1 else 0 end) AS MESSAGE_READ
								 	FROM "VENDOR_INQUIRY_MESSAGE" VIM
								 		WHERE VIM.CREATED_USER_ID != in_user_id AND VIM.ENABLED = 1 AND VIM.DELETED = 0
								 		GROUP BY VIM.VENDOR_INQUIRY_ID;
								 		
    va_vendor_request_message = SELECT VRM.VENDOR_REQUEST_ID, sum(case when VRM.MESSAGE_READ = 0 then 1 else 0 end) AS MESSAGE_READ
								 	FROM "VENDOR_REQUEST_MESSAGE" VRM
								 		WHERE VRM.CREATED_USER_ID != in_user_id AND VRM.ENABLED = 1 AND VRM.DELETED = 0
								 		GROUP BY VRM.VENDOR_REQUEST_ID;

	va_change_vendor_request_message = SELECT CVRM.CHANGE_VENDOR_REQUEST_ID, sum(case when CVRM.MESSAGE_READ = 0 then 1 else 0 end) AS MESSAGE_READ
								 	FROM "CHANGE_VENDOR_REQUEST_MESSAGE" CVRM
								 		WHERE CVRM.CREATED_USER_ID != in_user_id AND CVRM.ENABLED = 1 AND CVRM.DELETED = 0
								 		GROUP BY CVRM.CHANGE_VENDOR_REQUEST_ID;
								 		
	va_extend_vendor_request_message = SELECT EVRM.EXTEND_VENDOR_REQUEST_ID, sum(case when EVRM.MESSAGE_READ = 0 then 1 else 0 end) AS MESSAGE_READ
								 	FROM "EXTEND_VENDOR_REQUEST_MESSAGE" EVRM
								 		WHERE EVRM.CREATED_USER_ID != in_user_id AND EVRM.ENABLED = 1 AND EVRM.DELETED = 0
								 		GROUP BY EVRM.EXTEND_VENDOR_REQUEST_ID;
				 		
	va_user_role = SELECT USR.ROLE_ID, USR.USER_ID, HL3.HL3_ID, USR.ENABLED, USR.DELETED, RP.PERMISSION_LEVEL
						FROM "USER_ROLE" USR
							LEFT JOIN "HL3_USER" HL3 ON HL3.USER_ID = USR.USER_ID AND HL3.ENABLED = 1 AND HL3.DELETED = 0
							INNER JOIN "ROLE_PERMISSION" RP 
								ON RP.ROLE_ID = USR.ROLE_ID
								AND RP.PERMISSION_ID = in_permission_id
								AND RP.RESOURCE_ID = in_resource_id
						WHERE USR.USER_ID = in_user_id;
						
	--Vendor Inquiry			 		
	out_result = SELECT DISTINCT VT.ISO || TO_NVARCHAR(VI.VENDOR_INQUIRY_ID) AS VENDOR_REQUEST_INQUIRY_ID,
									VI.VENDOR_INQUIRY_ID AS V_ID,
									0 AS VENDOR_ID,
									VAM.MESSAGE_READ,
									VI.CREATED_DATE_TZ AS CREATED_DATE_TZ,
									VI.VENDOR_NAME,
									VI.CREATED_DATE_TZ AS RECEIVER_DATE_SUBMITTED_TZ,
									'' AS RECEIVER_YVC_REQUEST,
									TO_NVARCHAR(VI.RECEIVER_DATE_COMPLETED_TZ,'YYYY-MM-DD') AS RECEIVER_DATE_COMPLETED_TZ,
									'' AS RECEIVER_VENDOR_ACCOUNT,
									ST.NAME AS STATUS_NAME,
									VI.STATUS_ID,
									ST.ADMINISTRABLE,
			  						(CASE WHEN (ST.STATUS_ID = 3 OR ST.STATUS_ID = 4) AND USROLE.PERMISSION_LEVEL != 2 THEN FALSE ELSE TRUE END) AS EDITABLE,
									VI.VENDOR_TYPE_ID,
									VI.CREATED_DATE_TZ AS ORDER_DATE,
									VI.CREATED_USER_ID
             			FROM "VENDOR_INQUIRY" VI 
                            INNER JOIN "VENDOR_INQUIRY_STATUS" ST ON ST.STATUS_ID = VI.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
                            INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = VI.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
                            LEFT JOIN :va_vendor_inquiry_message VAM ON VI.VENDOR_INQUIRY_ID = VAM.VENDOR_INQUIRY_ID
                            INNER JOIN "USER_ROLE" USR ON USR.USER_ID = in_user_id
                            LEFT JOIN "HL3_USER" HL3 ON HL3.USER_ID = in_user_id
                            LEFT JOIN "HL3_USER" CHL3 ON CHL3.USER_ID = VI.CREATED_USER_ID
                            INNER JOIN :va_user_role USROLE ON USR.ENABLED = 1
             			WHERE (USR.ROLE_ID = 1 AND VI.ENABLED = 1 AND VI.DELETED = 0)
			              		OR (USR.ROLE_ID = 2
			              			AND VI.CREATED_USER_ID = in_user_id
			              		   )
			              		OR (USR.ROLE_ID > 2 
			              			AND ((HL3.HL3_ID = CHL3.HL3_ID) OR (HL3.HL3_ID is null AND VI.CREATED_USER_ID = in_user_id)) 
			              			AND VI.ENABLED = 1 
			              			AND VI.DELETED = 0
			              		   )
             	UNION
     --Vendor Request
             	 (SELECT DISTINCT VT.ISO || TO_NVARCHAR(VR.VENDOR_REQUEST_ID) AS VENDOR_REQUEST_INQUIRY_ID,
								VR.VENDOR_REQUEST_ID AS V_ID,
								VR.VENDOR_ID,
								VAM.MESSAGE_READ,
								VR.CREATED_DATE_TZ AS CREATED_DATE_TZ,
								VAI.VENDOR_NAME,
								VR.CREATED_DATE_TZ AS RECEIVER_DATE_SUBMITTED_TZ,
								VR.RECEIVER_YVC_REQUEST,
								VR.RECEIVER_DATE_COMPLETED_TZ AS RECEIVER_DATE_COMPLETED_TZ,
								V.ACCOUNT AS RECEIVER_VENDOR_ACCOUNT,
								ST.NAME AS STATUS_NAME,
								VR.STATUS_ID,
								ST.ADMINISTRABLE,
								(CASE WHEN (ST.STATUS_ID = 5 OR ST.STATUS_ID = 6) AND USROLE.PERMISSION_LEVEL != 2 THEN FALSE ELSE TRUE END) AS EDITABLE,
								VR.VENDOR_TYPE_ID,
								VR.CREATED_DATE_TZ AS ORDER_DATE,
								VR.CREATED_USER_ID
             			FROM "VENDOR_REQUEST" VR 
                            INNER JOIN "VENDOR" V ON VR.VENDOR_ID = V.VENDOR_ID
                            INNER JOIN "VENDOR_ADDITIONAL_INFORMATION" VAI ON VR.VENDOR_ADDITIONAL_INFORMATION_ID = VAI.VENDOR_ADDITIONAL_INFORMATION_ID
                            INNER JOIN "VENDOR_REQUEST_STATUS" ST ON ST.STATUS_ID = VR.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
                            INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = VR.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
                            LEFT JOIN :va_vendor_request_message VAM ON VR.VENDOR_REQUEST_ID = VAM.VENDOR_REQUEST_ID
                            INNER JOIN "USER_ROLE" USR ON USR.USER_ID = in_user_id
                            LEFT JOIN "HL3_USER" HL3 ON HL3.USER_ID = in_user_id
                            LEFT JOIN "HL3_USER" CHL3 ON CHL3.USER_ID = VR.CREATED_USER_ID
                            INNER JOIN :va_user_role USROLE ON USR.ENABLED = 1
             			WHERE (USR.ROLE_ID = 1 AND VR.ENABLED = 1 AND VR.DELETED = 0)
			              		OR (USR.ROLE_ID = 2
			              			AND VR.CREATED_USER_ID = in_user_id
			              		   )
			              		OR (USR.ROLE_ID > 2 
			              			AND ((HL3.HL3_ID = CHL3.HL3_ID) OR (HL3.HL3_ID is null AND VR.CREATED_USER_ID = in_user_id)) 
			              			AND VR.ENABLED = 1 
			              			AND VR.DELETED = 0
			              		   )
			  	 )
             	UNION
     --Change Vendor Request             	
             	 (SELECT DISTINCT VT.ISO || TO_NVARCHAR(CVR.CHANGE_VENDOR_REQUEST_ID) AS VENDOR_REQUEST_INQUIRY_ID,
								CVR.CHANGE_VENDOR_REQUEST_ID AS V_ID,
								0 AS VENDOR_ID,
								VAM.MESSAGE_READ,
								CVR.CREATED_DATE_TZ AS CREATED_DATE_TZ,
								CVR.VENDOR_NAME,
								CVR.CREATED_DATE_TZ AS RECEIVER_DATE_SUBMITTED_TZ,
								CVR.RECEIVER_YVC_REQUEST,
								CVR.RECEIVER_DATE_COMPLETED_TZ AS RECEIVER_DATE_COMPLETED_TZ,
								VENDOR_ACCOUNT AS RECEIVER_VENDOR_ACCOUNT,
								ST.NAME AS STATUS_NAME,
								CVR.STATUS_ID,
								ST.ADMINISTRABLE,
								(CASE WHEN (ST.STATUS_ID = 5 OR ST.STATUS_ID = 6) AND USROLE.PERMISSION_LEVEL != 2 THEN FALSE ELSE TRUE END) AS EDITABLE,
								CVR.VENDOR_TYPE_ID,
								CVR.CREATED_DATE_TZ AS ORDER_DATE,
								CVR.CREATED_USER_ID
             			FROM "CHANGE_VENDOR_REQUEST" CVR 
                            INNER JOIN "CHANGE_VENDOR_REQUEST_STATUS" ST ON ST.STATUS_ID = CVR.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
                            INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = CVR.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
                            LEFT JOIN :va_change_vendor_request_message VAM ON CVR.CHANGE_VENDOR_REQUEST_ID = VAM.CHANGE_VENDOR_REQUEST_ID
                            INNER JOIN "USER_ROLE" USR ON USR.USER_ID = in_user_id
                            LEFT JOIN "HL3_USER" HL3 ON HL3.USER_ID = in_user_id
                            LEFT JOIN "HL3_USER" CHL3 ON CHL3.USER_ID = CVR.CREATED_USER_ID
                            INNER JOIN :va_user_role USROLE ON USR.ENABLED = 1
             			WHERE (USR.ROLE_ID = 1 AND CVR.ENABLED = 1 AND CVR.DELETED = 0)
			              		OR (USR.ROLE_ID = 2
			              			AND CVR.CREATED_USER_ID = in_user_id
			              		   )
			              		OR (USR.ROLE_ID > 2 
			              			AND ((HL3.HL3_ID = CHL3.HL3_ID) OR (HL3.HL3_ID is null AND CVR.CREATED_USER_ID = in_user_id)) 
			              			AND CVR.ENABLED = 1 
			              			AND CVR.DELETED = 0
			              		   )
			     )
             	UNION
     --Extend Vendor Request             	
             	 (SELECT DISTINCT VT.ISO || TO_NVARCHAR(EVR.EXTEND_VENDOR_REQUEST_ID) AS VENDOR_REQUEST_INQUIRY_ID,
								EVR.EXTEND_VENDOR_REQUEST_ID AS V_ID,
								0 AS VENDOR_ID,
								VAM.MESSAGE_READ,
								EVR.CREATED_DATE_TZ AS CREATED_DATE_TZ,
								EVR.VENDOR_LEGAL_NAME AS VENDOR_NAME,
								EVR.CREATED_DATE_TZ AS RECEIVER_DATE_SUBMITTED_TZ,
								EVR.RECEIVER_YVC_REQUEST,
								EVR.RECEIVER_DATE_COMPLETED_TZ AS RECEIVER_DATE_COMPLETED_TZ,
								VENDOR_ACCOUNT AS RECEIVER_VENDOR_ACCOUNT,
								ST.NAME AS STATUS_NAME,
								EVR.STATUS_ID,
								ST.ADMINISTRABLE,
								(CASE WHEN (ST.STATUS_ID = 5 OR ST.STATUS_ID = 6) AND USROLE.PERMISSION_LEVEL != 2 THEN FALSE ELSE TRUE END) AS EDITABLE,
								EVR.VENDOR_TYPE_ID,
								EVR.CREATED_DATE_TZ AS ORDER_DATE,
								EVR.CREATED_USER_ID
             			FROM "EXTEND_VENDOR_REQUEST" EVR 
                            INNER JOIN "EXTEND_VENDOR_REQUEST_STATUS" ST ON ST.STATUS_ID = EVR.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
                            INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = EVR.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
                            LEFT JOIN :va_extend_vendor_request_message VAM ON EVR.EXTEND_VENDOR_REQUEST_ID = VAM.EXTEND_VENDOR_REQUEST_ID
                            INNER JOIN "USER_ROLE" USR ON USR.USER_ID = in_user_id
                            LEFT JOIN "HL3_USER" HL3 ON HL3.USER_ID = in_user_id
                            LEFT JOIN "HL3_USER" CHL3 ON CHL3.USER_ID = EVR.CREATED_USER_ID
                            INNER JOIN :va_user_role USROLE ON USR.ENABLED = 1
             			WHERE (in_user_id = 1 OR USR.ROLE_ID = 1 AND EVR.ENABLED = 1 AND EVR.DELETED = 0)
			              		OR (USR.ROLE_ID = 2
			              			AND EVR.CREATED_USER_ID = in_user_id
			              		   )
			              		OR (USR.ROLE_ID > 2 
			              			AND ((HL3.HL3_ID = CHL3.HL3_ID) OR (HL3.HL3_ID is null AND EVR.CREATED_USER_ID = in_user_id)) 
			              			AND EVR.ENABLED = 1 
			              			AND EVR.DELETED = 0
			              		   )
			         )
             			ORDER BY order_date DESC;
END;