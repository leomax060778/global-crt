PROCEDURE "MKTG_CART_REQUEST_TOOL"."mktgcartrequesttool.db.procedures::GET_VENDOR_REQUEST_INQUIRY_BY_STATUS" (
  IN in_status_id bigint,
  OUT out_result TABLE (VENDOR_REQUEST_INQUIRY_ID nvarchar(255),
							V_ID bigint,
							VENDOR_NAME NVARCHAR (255),
							STATUS_NAME NVARCHAR(255),
							REQUESTER nvarchar(255), 
							VENDOR_TYPE_ID BIGINT,
							order_date timestamp
                       )
)
LANGUAGE SQLSCRIPT
SQL SECURITY INVOKER
DEFAULT SCHEMA "MKTG_CART_REQUEST_TOOL"
READS SQL DATA AS
BEGIN
--Vendor inquiry
out_result = SELECT VT.ISO || TO_NVARCHAR(VI.VENDOR_INQUIRY_ID) AS VENDOR_REQUEST_INQUIRY_ID,
					VI.VENDOR_INQUIRY_ID AS V_ID,
					VI.VENDOR_NAME, 
					ST.NAME AS STATUS_NAME, 
					(US.user_name || ' / ' || US.first_name || ' ' || US.last_name) AS REQUESTER, 
					VI.VENDOR_TYPE_ID, VI.CREATED_DATE_TZ AS ORDER_DATE
             	FROM "VENDOR_INQUIRY" VI
         			INNER JOIN "VENDOR_INQUIRY_STATUS" ST ON ST.STATUS_ID = VI.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
         			INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = VI.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
         			INNER JOIN "USER" US ON US.USER_ID = VI.USER_ID
     			WHERE VI.STATUS_ID = in_status_id AND VI.ENABLED = 1 AND VI.DELETED = 0
         	 UNION
         	 --Vendor Request
             	 (SELECT VT.ISO || TO_NVARCHAR(VR.VENDOR_REQUEST_ID) AS VENDOR_REQUEST_INQUIRY_ID,
             	 		VR.VENDOR_REQUEST_ID AS V_ID, 
             	 		VAI.VENDOR_NAME, 
             	 		ST.NAME AS STATUS_NAME, 
             	 		(US.user_name || ' / ' || US.first_name || ' ' || US.last_name) AS REQUESTER, 
             	 		VR.VENDOR_TYPE_ID, 
             	 		VR.CREATED_DATE_TZ AS ORDER_DATE
             		FROM "VENDOR_REQUEST" VR
             			INNER JOIN "VENDOR_ADDITIONAL_INFORMATION" VAI ON VR.VENDOR_ADDITIONAL_INFORMATION_ID = VAI.VENDOR_ADDITIONAL_INFORMATION_ID
             			INNER JOIN "VENDOR_INQUIRY_STATUS" ST ON ST.STATUS_ID = VR.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
             			INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = VR.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
             			INNER JOIN "USER" US ON US.USER_ID = VR.USER_ID
             			WHERE VR.STATUS_ID = in_status_id AND VR.ENABLED = 1 AND VR.DELETED = 0)
             	UNION
             	--Change Vendor Request
             	 (SELECT VT.ISO || TO_NVARCHAR(CVR.CHANGE_VENDOR_REQUEST_ID) AS VENDOR_REQUEST_INQUIRY_ID,
             	 		CVR.CHANGE_VENDOR_REQUEST_ID AS V_ID, 
             	 		CVR.VENDOR_NAME, 
             	 		ST.NAME AS STATUS_NAME, 
             	 		(US.user_name || ' / ' || US.first_name || ' ' || US.last_name) AS REQUESTER, 
             	 		CVR.VENDOR_TYPE_ID, 
             	 		CVR.CREATED_DATE_TZ AS ORDER_DATE
             		FROM "CHANGE_VENDOR_REQUEST" CVR
	         			INNER JOIN "VENDOR_INQUIRY_STATUS" ST ON ST.STATUS_ID = CVR.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
	         			INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = CVR.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
	         			INNER JOIN "USER" US ON US.USER_ID = CVR.USER_ID
         			WHERE CVR.STATUS_ID = in_status_id AND CVR.ENABLED = 1 AND CVR.DELETED = 0)
             	UNION
             	--Extend Vendor Request
             	 (SELECT VT.ISO || TO_NVARCHAR(EVR.EXTEND_VENDOR_REQUEST_ID) AS VENDOR_REQUEST_INQUIRY_ID,
             	 		EVR.EXTEND_VENDOR_REQUEST_ID AS V_ID, 
             	 		EVR.VENDOR_LEGAL_NAME AS VENDOR_NAME, 
             	 		ST.NAME AS STATUS_NAME, 
             	 		(US.user_name || ' / ' || US.first_name || ' ' || US.last_name) AS REQUESTER, 
             	 		EVR.VENDOR_TYPE_ID, 
             	 		EVR.CREATED_DATE_TZ AS ORDER_DATE
         			FROM "EXTEND_VENDOR_REQUEST" EVR
             			INNER JOIN "VENDOR_INQUIRY_STATUS" ST ON ST.STATUS_ID = EVR.STATUS_ID AND ST.ENABLED = 1 AND ST.DELETED = 0
             			INNER JOIN "VENDOR_TYPE" VT ON VT.VENDOR_TYPE_ID = EVR.VENDOR_TYPE_ID AND VT.ENABLED = 1 AND VT.DELETED = 0
             			INNER JOIN "USER" US ON US.USER_ID = EVR.USER_ID
         			WHERE EVR.STATUS_ID = in_status_id AND EVR.ENABLED = 1 AND EVR.DELETED = 0)
     			ORDER BY order_date DESC;
END;
